CREATE DATABASE  vk;
SHOW DATABASES;
USE vk;

CREATE TABLE users (
id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT "Идентификатор строки",
first_name VARCHAR(100) NOT NULL COMMENT "Имя пользователя",
last_name VARCHAR(100) NOT NULL COMMENT "Фамилия пользователя",
birthday DATE NOT NULL COMMENT "Дата рождения",
gender CHAR (1) NOT NULL COMMENT "Пол",
email VARCHAR(100) NOT NULL UNIQUE COMMENT "E-mail пользователя",
phone VARCHAR(11) NOT NULL UNIQUE COMMENT "Телефон пользователя",
created_at DATETIME COMMENT "Дата и время создания строки",
update_at DATETIME COMMENT "Дата и время обновления строки"
) COMMENT "Таблица пользователей";

CREATE TABLE profiles (
user_id INT UNSIGNED NOT NULL PRIMARY KEY COMMENT "Идентификатор строки",
city VARCHAR(100) COMMENT "Город пользователя", 
country VARCHAR(100) COMMENT "Страна пользователя",
family_status ENUM ("в браке", "встречается", "в активном поиске", "свободен") COMMENT "Семейное положение",
`status` VARCHAR (70) COMMENT "Текущий статус", 
interests VARCHAR(100) COMMENT "Интересы",
created_at DATETIME COMMENT "Дата и время создания строки",
update_at DATETIME COMMENT "Дата и время обновления строки"
) COMMENT "Таблица профилей";

ALTER TABLE profiles ADD CONSTRAINT profiles_user_id FOREIGN KEY (user_id) REFERENCES users(id);

CREATE TABLE friendship (
user_id INT UNSIGNED NOT NULL,
friend_id INT UNSIGNED NOT NULL,
request_type VARCHAR(10) COMMENT 'Тип запроса',
    requested_at DATETIME COMMENT 'Время отправки приглашения',
    confirmed_at DATETIME COMMENT 'Время подтверждения приглашения',
    created_at DATETIME COMMENT 'Дата и время создания строки',    
    updated_at DATETIME COMMENT 'Дата и время обновленния строки',
    PRIMARY KEY (user_id, friend_id) COMMENT 'Составной первичный ключ'
) COMMENT "Таблица друзей";

ALTER TABLE friendship ADD CONSTRAINT friendship_user_id FOREIGN KEY (user_id) REFERENCES users(id);
ALTER TABLE friendship ADD CONSTRAINT friendship_friend_id FOREIGN KEY (friend_id) REFERENCES users(id);

CREATE TABLE friendship_request_types (
  id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT "Идентификатор строки",
  name VARCHAR(150) NOT NULL UNIQUE COMMENT "Название статуса",
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT "Время создания строки",  
  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT "Время обновления строки"  
) COMMENT "Типы запроса на дружбы";

ALTER TABLE friendship_request_types ADD CONSTRAINT friendship_request_types_id FOREIGN KEY (id) REFERENCES users(id);

CREATE TABLE communities (
  id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT "Идентификатор сроки",
  name VARCHAR(150) NOT NULL UNIQUE COMMENT "Название группы",
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT "Время создания строки",  
  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT "Время обновления строки"
) COMMENT "Группы";

ALTER TABLE communities ADD CONSTRAINT communities_id FOREIGN KEY (id) REFERENCES users(id); 

CREATE TABLE messages (
  messages_id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT "Идентификатор строки", 
  from_user_id INT UNSIGNED NOT NULL COMMENT "Ссылка на отправителя сообщения",
  to_user_id INT UNSIGNED NOT NULL COMMENT "Ссылка на получателя сообщения",
  body TEXT NOT NULL COMMENT "Текст сообщения",
  is_important BOOLEAN COMMENT "Признак важности",
  is_delivered BOOLEAN COMMENT "Признак доставки",
  created_at DATETIME DEFAULT NOW() COMMENT "Время создания строки",
  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT "Время обновления строки"
) COMMENT "Сообщения";

ALTER TABLE messages ADD CONSTRAINT messages_from_user_id FOREIGN KEY (from_user_id) REFERENCES users(id); 
ALTER TABLE messages ADD CONSTRAINT messages_to_user_id FOREIGN KEY (to_user_id) REFERENCES users(id); 